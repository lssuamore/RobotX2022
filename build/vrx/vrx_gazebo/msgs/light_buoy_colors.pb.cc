// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: light_buoy_colors.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "light_buoy_colors.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace light_buoy_colors_msgs {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* LightBuoyColors_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LightBuoyColors_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_light_5fbuoy_5fcolors_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_light_5fbuoy_5fcolors_2eproto() {
  protobuf_AddDesc_light_5fbuoy_5fcolors_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "light_buoy_colors.proto");
  GOOGLE_CHECK(file != NULL);
  LightBuoyColors_descriptor_ = file->message_type(0);
  static const int LightBuoyColors_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightBuoyColors, color_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightBuoyColors, color_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightBuoyColors, color_3_),
  };
  LightBuoyColors_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LightBuoyColors_descriptor_,
      LightBuoyColors::default_instance_,
      LightBuoyColors_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightBuoyColors, _has_bits_[0]),
      -1,
      -1,
      sizeof(LightBuoyColors),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightBuoyColors, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_light_5fbuoy_5fcolors_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LightBuoyColors_descriptor_, &LightBuoyColors::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_light_5fbuoy_5fcolors_2eproto() {
  delete LightBuoyColors::default_instance_;
  delete LightBuoyColors_reflection_;
}

void protobuf_AddDesc_light_5fbuoy_5fcolors_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_light_5fbuoy_5fcolors_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027light_buoy_colors.proto\022\033light_buoy_co"
    "lors_msgs.msgs\"D\n\017LightBuoyColors\022\017\n\007col"
    "or_1\030\001 \002(\t\022\017\n\007color_2\030\002 \002(\t\022\017\n\007color_3\030\003"
    " \002(\t", 124);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "light_buoy_colors.proto", &protobuf_RegisterTypes);
  LightBuoyColors::default_instance_ = new LightBuoyColors();
  LightBuoyColors::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_light_5fbuoy_5fcolors_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_light_5fbuoy_5fcolors_2eproto {
  StaticDescriptorInitializer_light_5fbuoy_5fcolors_2eproto() {
    protobuf_AddDesc_light_5fbuoy_5fcolors_2eproto();
  }
} static_descriptor_initializer_light_5fbuoy_5fcolors_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightBuoyColors::kColor1FieldNumber;
const int LightBuoyColors::kColor2FieldNumber;
const int LightBuoyColors::kColor3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightBuoyColors::LightBuoyColors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:light_buoy_colors_msgs.msgs.LightBuoyColors)
}

void LightBuoyColors::InitAsDefaultInstance() {
}

LightBuoyColors::LightBuoyColors(const LightBuoyColors& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:light_buoy_colors_msgs.msgs.LightBuoyColors)
}

void LightBuoyColors::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  color_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LightBuoyColors::~LightBuoyColors() {
  // @@protoc_insertion_point(destructor:light_buoy_colors_msgs.msgs.LightBuoyColors)
  SharedDtor();
}

void LightBuoyColors::SharedDtor() {
  color_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LightBuoyColors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LightBuoyColors::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LightBuoyColors_descriptor_;
}

const LightBuoyColors& LightBuoyColors::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_light_5fbuoy_5fcolors_2eproto();
  return *default_instance_;
}

LightBuoyColors* LightBuoyColors::default_instance_ = NULL;

LightBuoyColors* LightBuoyColors::New(::google::protobuf::Arena* arena) const {
  LightBuoyColors* n = new LightBuoyColors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LightBuoyColors::Clear() {
// @@protoc_insertion_point(message_clear_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_color_1()) {
      color_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_color_2()) {
      color_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_color_3()) {
      color_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LightBuoyColors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string color_1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color_1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color_1().data(), this->color_1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "light_buoy_colors_msgs.msgs.LightBuoyColors.color_1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_color_2;
        break;
      }

      // required string color_2 = 2;
      case 2: {
        if (tag == 18) {
         parse_color_2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color_2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color_2().data(), this->color_2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "light_buoy_colors_msgs.msgs.LightBuoyColors.color_2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_color_3;
        break;
      }

      // required string color_3 = 3;
      case 3: {
        if (tag == 26) {
         parse_color_3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color_3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color_3().data(), this->color_3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "light_buoy_colors_msgs.msgs.LightBuoyColors.color_3");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:light_buoy_colors_msgs.msgs.LightBuoyColors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:light_buoy_colors_msgs.msgs.LightBuoyColors)
  return false;
#undef DO_
}

void LightBuoyColors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  // required string color_1 = 1;
  if (has_color_1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color_1().data(), this->color_1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "light_buoy_colors_msgs.msgs.LightBuoyColors.color_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->color_1(), output);
  }

  // required string color_2 = 2;
  if (has_color_2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color_2().data(), this->color_2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "light_buoy_colors_msgs.msgs.LightBuoyColors.color_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->color_2(), output);
  }

  // required string color_3 = 3;
  if (has_color_3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color_3().data(), this->color_3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "light_buoy_colors_msgs.msgs.LightBuoyColors.color_3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->color_3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:light_buoy_colors_msgs.msgs.LightBuoyColors)
}

::google::protobuf::uint8* LightBuoyColors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  // required string color_1 = 1;
  if (has_color_1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color_1().data(), this->color_1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "light_buoy_colors_msgs.msgs.LightBuoyColors.color_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->color_1(), target);
  }

  // required string color_2 = 2;
  if (has_color_2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color_2().data(), this->color_2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "light_buoy_colors_msgs.msgs.LightBuoyColors.color_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->color_2(), target);
  }

  // required string color_3 = 3;
  if (has_color_3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color_3().data(), this->color_3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "light_buoy_colors_msgs.msgs.LightBuoyColors.color_3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->color_3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:light_buoy_colors_msgs.msgs.LightBuoyColors)
  return target;
}

int LightBuoyColors::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  int total_size = 0;

  if (has_color_1()) {
    // required string color_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color_1());
  }

  if (has_color_2()) {
    // required string color_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color_2());
  }

  if (has_color_3()) {
    // required string color_3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color_3());
  }

  return total_size;
}
int LightBuoyColors::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string color_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color_1());

    // required string color_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color_2());

    // required string color_3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color_3());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LightBuoyColors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LightBuoyColors* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LightBuoyColors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:light_buoy_colors_msgs.msgs.LightBuoyColors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:light_buoy_colors_msgs.msgs.LightBuoyColors)
    MergeFrom(*source);
  }
}

void LightBuoyColors::MergeFrom(const LightBuoyColors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_color_1()) {
      set_has_color_1();
      color_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_1_);
    }
    if (from.has_color_2()) {
      set_has_color_2();
      color_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_2_);
    }
    if (from.has_color_3()) {
      set_has_color_3();
      color_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_3_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LightBuoyColors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightBuoyColors::CopyFrom(const LightBuoyColors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:light_buoy_colors_msgs.msgs.LightBuoyColors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightBuoyColors::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void LightBuoyColors::Swap(LightBuoyColors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightBuoyColors::InternalSwap(LightBuoyColors* other) {
  color_1_.Swap(&other->color_1_);
  color_2_.Swap(&other->color_2_);
  color_3_.Swap(&other->color_3_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LightBuoyColors::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LightBuoyColors_descriptor_;
  metadata.reflection = LightBuoyColors_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LightBuoyColors

// required string color_1 = 1;
bool LightBuoyColors::has_color_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LightBuoyColors::set_has_color_1() {
  _has_bits_[0] |= 0x00000001u;
}
void LightBuoyColors::clear_has_color_1() {
  _has_bits_[0] &= ~0x00000001u;
}
void LightBuoyColors::clear_color_1() {
  color_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color_1();
}
 const ::std::string& LightBuoyColors::color_1() const {
  // @@protoc_insertion_point(field_get:light_buoy_colors_msgs.msgs.LightBuoyColors.color_1)
  return color_1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LightBuoyColors::set_color_1(const ::std::string& value) {
  set_has_color_1();
  color_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:light_buoy_colors_msgs.msgs.LightBuoyColors.color_1)
}
 void LightBuoyColors::set_color_1(const char* value) {
  set_has_color_1();
  color_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:light_buoy_colors_msgs.msgs.LightBuoyColors.color_1)
}
 void LightBuoyColors::set_color_1(const char* value, size_t size) {
  set_has_color_1();
  color_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:light_buoy_colors_msgs.msgs.LightBuoyColors.color_1)
}
 ::std::string* LightBuoyColors::mutable_color_1() {
  set_has_color_1();
  // @@protoc_insertion_point(field_mutable:light_buoy_colors_msgs.msgs.LightBuoyColors.color_1)
  return color_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LightBuoyColors::release_color_1() {
  // @@protoc_insertion_point(field_release:light_buoy_colors_msgs.msgs.LightBuoyColors.color_1)
  clear_has_color_1();
  return color_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LightBuoyColors::set_allocated_color_1(::std::string* color_1) {
  if (color_1 != NULL) {
    set_has_color_1();
  } else {
    clear_has_color_1();
  }
  color_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color_1);
  // @@protoc_insertion_point(field_set_allocated:light_buoy_colors_msgs.msgs.LightBuoyColors.color_1)
}

// required string color_2 = 2;
bool LightBuoyColors::has_color_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LightBuoyColors::set_has_color_2() {
  _has_bits_[0] |= 0x00000002u;
}
void LightBuoyColors::clear_has_color_2() {
  _has_bits_[0] &= ~0x00000002u;
}
void LightBuoyColors::clear_color_2() {
  color_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color_2();
}
 const ::std::string& LightBuoyColors::color_2() const {
  // @@protoc_insertion_point(field_get:light_buoy_colors_msgs.msgs.LightBuoyColors.color_2)
  return color_2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LightBuoyColors::set_color_2(const ::std::string& value) {
  set_has_color_2();
  color_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:light_buoy_colors_msgs.msgs.LightBuoyColors.color_2)
}
 void LightBuoyColors::set_color_2(const char* value) {
  set_has_color_2();
  color_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:light_buoy_colors_msgs.msgs.LightBuoyColors.color_2)
}
 void LightBuoyColors::set_color_2(const char* value, size_t size) {
  set_has_color_2();
  color_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:light_buoy_colors_msgs.msgs.LightBuoyColors.color_2)
}
 ::std::string* LightBuoyColors::mutable_color_2() {
  set_has_color_2();
  // @@protoc_insertion_point(field_mutable:light_buoy_colors_msgs.msgs.LightBuoyColors.color_2)
  return color_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LightBuoyColors::release_color_2() {
  // @@protoc_insertion_point(field_release:light_buoy_colors_msgs.msgs.LightBuoyColors.color_2)
  clear_has_color_2();
  return color_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LightBuoyColors::set_allocated_color_2(::std::string* color_2) {
  if (color_2 != NULL) {
    set_has_color_2();
  } else {
    clear_has_color_2();
  }
  color_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color_2);
  // @@protoc_insertion_point(field_set_allocated:light_buoy_colors_msgs.msgs.LightBuoyColors.color_2)
}

// required string color_3 = 3;
bool LightBuoyColors::has_color_3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LightBuoyColors::set_has_color_3() {
  _has_bits_[0] |= 0x00000004u;
}
void LightBuoyColors::clear_has_color_3() {
  _has_bits_[0] &= ~0x00000004u;
}
void LightBuoyColors::clear_color_3() {
  color_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color_3();
}
 const ::std::string& LightBuoyColors::color_3() const {
  // @@protoc_insertion_point(field_get:light_buoy_colors_msgs.msgs.LightBuoyColors.color_3)
  return color_3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LightBuoyColors::set_color_3(const ::std::string& value) {
  set_has_color_3();
  color_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:light_buoy_colors_msgs.msgs.LightBuoyColors.color_3)
}
 void LightBuoyColors::set_color_3(const char* value) {
  set_has_color_3();
  color_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:light_buoy_colors_msgs.msgs.LightBuoyColors.color_3)
}
 void LightBuoyColors::set_color_3(const char* value, size_t size) {
  set_has_color_3();
  color_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:light_buoy_colors_msgs.msgs.LightBuoyColors.color_3)
}
 ::std::string* LightBuoyColors::mutable_color_3() {
  set_has_color_3();
  // @@protoc_insertion_point(field_mutable:light_buoy_colors_msgs.msgs.LightBuoyColors.color_3)
  return color_3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LightBuoyColors::release_color_3() {
  // @@protoc_insertion_point(field_release:light_buoy_colors_msgs.msgs.LightBuoyColors.color_3)
  clear_has_color_3();
  return color_3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LightBuoyColors::set_allocated_color_3(::std::string* color_3) {
  if (color_3 != NULL) {
    set_has_color_3();
  } else {
    clear_has_color_3();
  }
  color_3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color_3);
  // @@protoc_insertion_point(field_set_allocated:light_buoy_colors_msgs.msgs.LightBuoyColors.color_3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace light_buoy_colors_msgs

// @@protoc_insertion_point(global_scope)
